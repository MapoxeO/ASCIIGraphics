<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>